.js

KWD_CONT:
    function BLUE YELLOW (, \c, {, }, ), ;
    class BLUE YELLOW (, \c, {, }, ), ;
    new PURPLE BLUE (, \c, {, }, ), ;
    let BLUE YELLOW ;, =, {, }, (, ), ], [    
    const BLUE YELLOW ;, =, {, }, (, ), ], [ 
    var BLUE YELLOW ;, =, {, }, (, ), ], [
KWD:
    await        PURPLE
    break        PURPLE
    case         PURPLE
    catch        PURPLE
    continue     PURPLE
    debugger     PURPLE
    default      PURPLE
    delete       PURPLE
    do           PURPLE
    else         PURPLE
    enum         PURPLE
    export       PURPLE
    extends      BLUE
    false        BLUE
    finally      PURPLE
    for          PURPLE
    if           PURPLE
    implements   PURPLE
    import       PURPLE
    in           PURPLE
    instanceof   PURPLE
    interface    PURPLE
    null         BLUE
    package      PURPLE
    private      BLUE
    protected    BLUE
    public       BLUE
    return       PURPLE
    super        BLUE
    switch       PURPLE
    static       BLUE
    this         BLUE
    throw        PURPLE
    try          PURPLE
    true         BLUE
    typeof       BLUE
    void         BLUE
    while        PURPLE
    with         PURPLE
    yield        PURPLE
REP:
    //       \n     GREY
    /*        */    GREY
    "          "    GREEN
    '       '       GREEN
